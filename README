
This Code should enable you run basic nufft functions easily

RUNNING THE CODE IS POSSIBLE ONLY ON PYTHON2.7!

The directory contains 4 folders:
1) extern - fortran files implement nufft functions
2) lib - python and matlab modules used by functions in programs
3) tests - tests and benchmarks for functions in programs
4) programs - nufft functions can be run from command line

tests
-----
1) to run all tests run the following command:
python -m unittest discover (-v to verbose)
2) to run all benchmarks run the following command:
python -m nufft_benchmark -- this can take a while...

programs
-----
you can run the following commands from shell:
1) ./rand_rots.py (n, output) - random n rotation matrices and save them to output
2) ./generate_random_volumes.py (n, output) - random volume n x n x n and save to output
3) ./vol_project.py (vol, rots, output) - project vol with rots and save to output
4) ./update_nufft.sh (n) - compile the fortran nufft function and creates an pyf module
the function in module can be called from any python module. To determine input of every
function, you need to change manually the relevant pyf files, for example, if you want to change
the function nufft1d1f90 you need search for this function in nufft1df90.f, see the relevant
parameters and change them in nufft1df90.pyf. Notice that you can also determine the type of
each variable in the input and the output and you can add/change some basic checks on them.

libs
-----
libs contains the core modules for nufft, the modules are:
1) nudft - implementation of nudft in python
2) nufft_cims - a module wraps all nufft implementations together - also implements a basic class that call to fortrans implementation
3) nudft_gpu - an implementation of nudft in GPU - compatible with the matlab code
4) nufft_gpu - an implementation of nufft in GPU - currently works ONLY for forward 2d!
5) cfft - contains basic fft funcs
6) nufft_ref - reference code for the GPU code (only for 1d and 2d)

usage example from python
------------------

(1) from lib.nufft_cims import py_nufft
(2) py_nufft_obj = py_nufft.factory('nufft')
(3) fortran_results = py_nufft_obj.forward2d(my_image, fourier_pts)[0]

in line (2) you may choose the type of nufft you wish to run, the possibilities are: nufft, nudft, gpu_nudft, gpu_nufft
in line (3) you may choose the which version of nufft you want(forward/adjoint and num of dimensions)

currently running nufft from command is possible only for 3d on mrc files
