!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module nufft1df90 ! in 
    interface  ! in :nufft1df90
        subroutine nufft1d1f90(nj,xj,cj,iflag,eps,ms,fk,ier) ! in :nufft1df90:nufft1df90_f2py.f
            integer, optional,intent(in),depend(xj) :: nj=len(xj)
            real*8 dimension(nj),intent(in) :: xj
            complex*16 dimension(nj),intent(in),depend(nj) :: cj
            integer intent(in) :: iflag
            real*8 intent(in) :: eps
            integer intent(in) :: ms
            complex*16, allocatable,dimension(1.0 * ms + 0.5),intent(out),depend(ms) :: fk
            integer intent(out) :: ier
        end subroutine nufft1d1f90
        subroutine nufft1d2f90(nj,xj,cj,iflag,eps,ms,fk,ier) ! in :nufft1df90:nufft1df90_f2py.f
            integer, optional,intent(in),depend(xj) :: nj=len(xj)
            real*8 dimension(nj),intent(in) :: xj
            complex*16 dimension(nj),intent(out),depend(nj) :: cj
            integer intent(in) :: iflag
            real*8 intent(in) :: eps
            integer, optional,intent(in),depend(fk) :: ms=shape(fk,0)
            complex*16, allocatable,dimension(1.0 * ms + 0.5),intent(in) :: fk
            integer intent(out) :: ier
        end subroutine nufft1d2f90
        subroutine nufft1d3f90(nj,xj,cj,iflag,eps,nk,sk,fk,ier) ! in :nufft1df90:nufft1df90_f2py.f
            integer, optional,check(len(xj)>=nj),depend(xj) :: nj=len(xj)
            real*8 dimension(nj) :: xj
            complex*16 dimension(nj),depend(nj) :: cj
            integer :: iflag
            real*8 :: eps
            integer, optional,check(len(sk)>=nk),depend(sk) :: nk=len(sk)
            real*8 dimension(nk) :: sk
            complex*16 dimension(nk),depend(nk) :: fk
            integer :: ier
        end subroutine nufft1d3f90
    end interface 
end python module nufft1df90

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
